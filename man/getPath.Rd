% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getPath.R
\name{getPath}
\alias{getPath}
\title{Examines all bands related from a central band}
\usage{
getPath(startNode, steps = 100, perStep = 20, igraphObj = TRUE)
}
\arguments{
\item{startNode}{The artist to start with, and radiate out from}

\item{steps}{Number of layers to go outward from the input band.}

\item{perStep}{The number of related bands to examine per artist of interest. See `details` for more information}

\item{igraphObj}{Boolean. Do you want the output as an edgelist or an igraph object?}
}
\value{
An igraph network object or an edgelist. The choice between the two really depends on how you want to visualize/analyze the graph. Check out the `getYourNetwork()` function examples for some cool dynamic network plotting.
}
\description{
For any number of `steps`, this function finds a set of related artists that are `steps` links away in related artist space
}
\details{
A `steps` value of 0 just finds the most related bands of the input band, while a `steps` value of 1 would examine the most related bands of the input band, and the most related bands of those bands. This gets out of control pretty quickly, so I recommend having some patience and selecting a `steps` value less than 5.
The number of related bands for a given artist is controlled by `perStep`, which defaults at the max number of bands that Spotify gives you (`perStep = 20`)'
}
\examples{

library(igraph)
hs <- getPath("The Hold Steady", steps=0, perStep=15, igraphObj=TRUE)
plot(hs)
}
\author{
Tad Dallas
}
\references{
https://developer.spotify.com/
}

